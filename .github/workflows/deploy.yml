name: Deploy

permissions:
  contents: write

on:
  push:
    branches: master
  workflow_dispatch:
  workflow_run:
    workflows: Test
    types: completed

jobs:
  get-version:
    if: (github.ref == 'refs/heads/master' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version
        id: get-version
        run: |
          VERSION=$(cat version.txt)
          echo "version=v$VERSION" >> "$GITHUB_OUTPUT"
    outputs:
      version: ${{ steps.get-version.outputs.version }}

  build-and-push-image:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CHEFSTER_DOCKER_PUSH_PAT }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ needs.get-version.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.Production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
    outputs:
      version: ${{ needs.get-version.outputs.version }}
  
  update-ec2:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Update the ec2 instance
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST_NAME: ${{ secrets.EC2_HOST_NAME }}
          USER_NAME: ${{ secrets.EC2_USER_NAME }}
          CHEFSTER_PAT: ${{ secrets.CHEFSTER_PAT }}
          IMAGE_NAME: "ghcr.io/chefster-ai/chefster:${{ needs.build-and-push-image.outputs.version }}"
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          echo "Updating to image name: ${IMAGE_NAME}"

          ssh -v -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} << EOF
            echo "Logging into GHCR..."
            echo $CHEFSTER_PAT | docker login ghcr.io -u chefster-ai --password-stdin
            echo "Pulling Docker image..."
            sudo docker pull ${IMAGE_NAME}
            echo "Deleting all Docker containers..."
            sudo docker rm -f $(sudo docker ps -a -q)
            echo "Running the new image..."
            sudo docker run -d -p 80:8080 --name chefster-container ${IMAGE_NAME}
            echo "Deleting all Docker images not in use..."
            sudo docker image prune -a
            exit
          EOF
      - name: Cleanup
        run: rm -f private_key
    outputs:
      version: ${{ needs.build-and-push-image.outputs.version }}
    
  create-tag:
    needs: update-ec2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create and push tag
        env:
          VERSION: ${{ needs.update-ec2.outputs.version }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"
