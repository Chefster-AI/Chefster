name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:

jobs:
  run-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      - name: Install dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build

      - name: Run tests
        run: |
          dotnet test Tests/Tests.csproj

  build-and-push-image:
    needs: run-unit-tests
    # If we push to master or manually run this workflow
    if: (github.ref == 'refs/heads/master' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: get_version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "version=dev" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.get_version.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_to_ec2:
    needs: run-unit-tests
    if: (github.ref == 'refs/heads/master' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST_NAME: ${{ secrets.EC2_HOST_NAME }}
          USER_NAME: ${{ secrets.EC2_USER_NAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -v -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} `
            echo ${{ secrets.CHEFSTER_PAT}} | docker login ghcr.io -u ${{secrets.CHEFSTER_DOCKER_USERNAME}} --password-stdin
            docker pull ghcr.io/${{ secrets.CHEFSTER_DOCKER_USERNAME }}/Chefster:${{ steps.get_version.outputs.version }}
            docker run -d -p 5144:80 --name chefster-container ghcr.io/${{ secrets.CHEFSTER_DOCKER_USERNAME }}/Chefster:${{ steps.get_version.outputs.version }}
            exit
          `

      - name: Cleanup
        run: rm -f private_key
